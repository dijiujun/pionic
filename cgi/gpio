#!/bin/bash 
source ${0%/*}/cgi.inc

((!UID)) || die "Must be root!"

usage="Usage:
    
    gpio [options]
    -or-
    curl -f http://pion/gpio[?option[&option...]]

Options are:
    
    G=0       - set gpio G to output low
    G=1       - set gpio G to output high
    G=in      - set gpio G to an input
    G=disable - disable gpio G
    disable   - disable all gpios

Where G is the gpio number 2 to 27. After options are processed (if any), list
the current state of all enabled gpios.  
"

shopt -s nullglob nocasematch

sys=/sys/class/gpio
[ -d $sys ] || die "User-mode GPIOs not supported"

# return list of enabled gpios
enabled()
{
    for f in $sys/gpio[0-9]*; do echo ${f#$sys/gpio}; done | sort -n
}

# set gpio $1 direction to $2, or die
direction() 
{ 
    [ -d $sys/gpio$1 ] || echo $1 > $sys/export
    grep -q $2 $sys/gpio$1/direction || echo $2 > $sys/gpio$1/direction
}

for opt in "$@"; do
    case "$opt" in
        res*|dis*) 
            for g in $(enabled); do echo $g > $sys/unexport; done
            ;;
        *) 
            [[ $opt =~ ^([0-9]+)=(.+) ]] || die "Invalid option '$opt'"
            gpio=${BASH_REMATCH[1]}
            ((gpio > 1 && gpio <= 27)) || die "Can't use gpio $gpio";
            op=${BASH_REMATCH[2]}
            case "$op" in
                0|1) 
                    direction $gpio out; echo $op > $sys/gpio$gpio/value
                    ;;
                in*) 
                    direction $gpio in
                    ;;
                dis*|res*) 
                    [ -d $sys/gpio$gpio ] && echo $gpio > $sys/unexport
                    ;;
                *) 
                    die "Invalid option '$opt'"
                    ;;
            esac
            ;;
    esac        
done

for g in $(enabled); do echo $g: $(cat $sys/gpio$g/direction $sys/gpio$g/value); done    
